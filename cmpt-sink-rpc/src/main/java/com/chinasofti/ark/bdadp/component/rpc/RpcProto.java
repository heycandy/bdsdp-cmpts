// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package com.chinasofti.ark.bdadp.component.rpc;

public final class RpcProto {
  private RpcProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RpcRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.RpcRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * <pre>
   * The request message containing the user's name.
   * </pre>
   *
   * Protobuf type {@code rpc.RpcRequest}
   */
  public  static final class RpcRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.RpcRequest)
      RpcRequestOrBuilder {
    // Use RpcRequest.newBuilder() to construct.
    private RpcRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcRequest() {
      name_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RpcRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.class, com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest)) {
        return super.equals(obj);
      }
      com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest other = (com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The request message containing the user's name.
     * </pre>
     *
     * Protobuf type {@code rpc.RpcRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.RpcRequest)
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.class, com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.Builder.class);
      }

      // Construct using com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcRequest_descriptor;
      }

      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest getDefaultInstanceForType() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.getDefaultInstance();
      }

      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest build() {
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest buildPartial() {
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest result = new com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest(this);
        result.name_ = name_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest) {
          return mergeFrom((com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest other) {
        if (other == com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.RpcRequest)
    }

    // @@protoc_insertion_point(class_scope:rpc.RpcRequest)
    private static final com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest();
    }

    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcRequest>
        PARSER = new com.google.protobuf.AbstractParser<RpcRequest>() {
      public RpcRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RpcRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RpcRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcRequest> getParserForType() {
      return PARSER;
    }

    public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RpcReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.RpcReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 no = 1;</code>
     */
    int getNo();

    /**
     * <code>int32 time = 2;</code>
     */
    int getTime();

    /**
     * <code>double cpu = 3;</code>
     */
    double getCpu();

    /**
     * <code>double mem = 4;</code>
     */
    double getMem();

    /**
     * <code>double disk = 5;</code>
     */
    double getDisk();

    /**
     * <code>double network = 6;</code>
     */
    double getNetwork();
  }
  /**
   * <pre>
   * The response message containing the greetings
   * </pre>
   *
   * Protobuf type {@code rpc.RpcReply}
   */
  public  static final class RpcReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.RpcReply)
      RpcReplyOrBuilder {
    // Use RpcReply.newBuilder() to construct.
    private RpcReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcReply() {
      no_ = 0;
      time_ = 0;
      cpu_ = 0D;
      mem_ = 0D;
      disk_ = 0D;
      network_ = 0D;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RpcReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              no_ = input.readInt32();
              break;
            }
            case 16: {

              time_ = input.readInt32();
              break;
            }
            case 25: {

              cpu_ = input.readDouble();
              break;
            }
            case 33: {

              mem_ = input.readDouble();
              break;
            }
            case 41: {

              disk_ = input.readDouble();
              break;
            }
            case 49: {

              network_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcReply_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.class, com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.Builder.class);
    }

    public static final int NO_FIELD_NUMBER = 1;
    private int no_;
    /**
     * <code>int32 no = 1;</code>
     */
    public int getNo() {
      return no_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>int32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int CPU_FIELD_NUMBER = 3;
    private double cpu_;
    /**
     * <code>double cpu = 3;</code>
     */
    public double getCpu() {
      return cpu_;
    }

    public static final int MEM_FIELD_NUMBER = 4;
    private double mem_;
    /**
     * <code>double mem = 4;</code>
     */
    public double getMem() {
      return mem_;
    }

    public static final int DISK_FIELD_NUMBER = 5;
    private double disk_;
    /**
     * <code>double disk = 5;</code>
     */
    public double getDisk() {
      return disk_;
    }

    public static final int NETWORK_FIELD_NUMBER = 6;
    private double network_;
    /**
     * <code>double network = 6;</code>
     */
    public double getNetwork() {
      return network_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (no_ != 0) {
        output.writeInt32(1, no_);
      }
      if (time_ != 0) {
        output.writeInt32(2, time_);
      }
      if (cpu_ != 0D) {
        output.writeDouble(3, cpu_);
      }
      if (mem_ != 0D) {
        output.writeDouble(4, mem_);
      }
      if (disk_ != 0D) {
        output.writeDouble(5, disk_);
      }
      if (network_ != 0D) {
        output.writeDouble(6, network_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (no_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, no_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (cpu_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, cpu_);
      }
      if (mem_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, mem_);
      }
      if (disk_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, disk_);
      }
      if (network_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, network_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply)) {
        return super.equals(obj);
      }
      com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply other = (com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply) obj;

      boolean result = true;
      result = result && (getNo()
          == other.getNo());
      result = result && (getTime()
          == other.getTime());
      result = result && (
          Double.doubleToLongBits(getCpu())
          == Double.doubleToLongBits(
              other.getCpu()));
      result = result && (
          Double.doubleToLongBits(getMem())
          == Double.doubleToLongBits(
              other.getMem()));
      result = result && (
          Double.doubleToLongBits(getDisk())
          == Double.doubleToLongBits(
              other.getDisk()));
      result = result && (
          Double.doubleToLongBits(getNetwork())
          == Double.doubleToLongBits(
              other.getNetwork()));
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NO_FIELD_NUMBER;
      hash = (53 * hash) + getNo();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + CPU_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getCpu()));
      hash = (37 * hash) + MEM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getMem()));
      hash = (37 * hash) + DISK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getDisk()));
      hash = (37 * hash) + NETWORK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getNetwork()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response message containing the greetings
     * </pre>
     *
     * Protobuf type {@code rpc.RpcReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.RpcReply)
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcReply_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.class, com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.Builder.class);
      }

      // Construct using com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        no_ = 0;

        time_ = 0;

        cpu_ = 0D;

        mem_ = 0D;

        disk_ = 0D;

        network_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.internal_static_rpc_RpcReply_descriptor;
      }

      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply getDefaultInstanceForType() {
        return com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.getDefaultInstance();
      }

      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply build() {
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply buildPartial() {
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply result = new com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply(this);
        result.no_ = no_;
        result.time_ = time_;
        result.cpu_ = cpu_;
        result.mem_ = mem_;
        result.disk_ = disk_;
        result.network_ = network_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply) {
          return mergeFrom((com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply other) {
        if (other == com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.getDefaultInstance()) return this;
        if (other.getNo() != 0) {
          setNo(other.getNo());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getCpu() != 0D) {
          setCpu(other.getCpu());
        }
        if (other.getMem() != 0D) {
          setMem(other.getMem());
        }
        if (other.getDisk() != 0D) {
          setDisk(other.getDisk());
        }
        if (other.getNetwork() != 0D) {
          setNetwork(other.getNetwork());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int no_ ;
      /**
       * <code>int32 no = 1;</code>
       */
      public int getNo() {
        return no_;
      }
      /**
       * <code>int32 no = 1;</code>
       */
      public Builder setNo(int value) {

        no_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 no = 1;</code>
       */
      public Builder clearNo() {

        no_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>int32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>int32 time = 2;</code>
       */
      public Builder setTime(int value) {

        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 time = 2;</code>
       */
      public Builder clearTime() {

        time_ = 0;
        onChanged();
        return this;
      }

      private double cpu_ ;
      /**
       * <code>double cpu = 3;</code>
       */
      public double getCpu() {
        return cpu_;
      }
      /**
       * <code>double cpu = 3;</code>
       */
      public Builder setCpu(double value) {

        cpu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double cpu = 3;</code>
       */
      public Builder clearCpu() {

        cpu_ = 0D;
        onChanged();
        return this;
      }

      private double mem_ ;
      /**
       * <code>double mem = 4;</code>
       */
      public double getMem() {
        return mem_;
      }
      /**
       * <code>double mem = 4;</code>
       */
      public Builder setMem(double value) {

        mem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double mem = 4;</code>
       */
      public Builder clearMem() {

        mem_ = 0D;
        onChanged();
        return this;
      }

      private double disk_ ;
      /**
       * <code>double disk = 5;</code>
       */
      public double getDisk() {
        return disk_;
      }
      /**
       * <code>double disk = 5;</code>
       */
      public Builder setDisk(double value) {

        disk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double disk = 5;</code>
       */
      public Builder clearDisk() {

        disk_ = 0D;
        onChanged();
        return this;
      }

      private double network_ ;
      /**
       * <code>double network = 6;</code>
       */
      public double getNetwork() {
        return network_;
      }
      /**
       * <code>double network = 6;</code>
       */
      public Builder setNetwork(double value) {

        network_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double network = 6;</code>
       */
      public Builder clearNetwork() {

        network_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.RpcReply)
    }

    // @@protoc_insertion_point(class_scope:rpc.RpcReply)
    private static final com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply();
    }

    public static com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcReply>
        PARSER = new com.google.protobuf.AbstractParser<RpcReply>() {
      public RpcReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RpcReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RpcReply> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcReply> getParserForType() {
      return PARSER;
    }

    public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  /**
   * <pre>
   * The greeting service definition.
   * </pre>
   *
   * Protobuf service {@code rpc.RpcService}
   */
  public static abstract class RpcService
      implements com.google.protobuf.Service {
    protected RpcService() {}

    public interface Interface {
      /**
       * <pre>
       * Sends a greeting
       * </pre>
       *
       * <code>rpc rpc(.rpc.RpcRequest) returns (stream .rpc.RpcReply);</code>
       */
      public abstract void rpc(
          com.google.protobuf.RpcController controller,
          com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest request,
          com.google.protobuf.RpcCallback<RpcReply> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new RpcService() {
        @Override
        public  void rpc(
            com.google.protobuf.RpcController controller,
            com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest request,
            com.google.protobuf.RpcCallback<RpcReply> done) {
          impl.rpc(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.rpc(controller, (com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest)request);
            default:
              throw new AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <pre>
     * Sends a greeting
     * </pre>
     *
     * <code>rpc rpc(.rpc.RpcRequest) returns (stream .rpc.RpcReply);</code>
     */
    public abstract void rpc(
        com.google.protobuf.RpcController controller,
        com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest request,
        com.google.protobuf.RpcCallback<RpcReply> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.chinasofti.ark.bdadp.component.rpc.RpcProto.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.rpc(controller, (com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest)request,
            com.google.protobuf.RpcUtil.<com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply>specializeCallback(
              done));
          return;
        default:
          throw new AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void rpc(
          com.google.protobuf.RpcController controller,
          com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest request,
          com.google.protobuf.RpcCallback<RpcReply> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.class,
            com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply rpc(
          com.google.protobuf.RpcController controller,
          com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply rpc(
          com.google.protobuf.RpcController controller,
          com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcRequest request)
          throws com.google.protobuf.ServiceException {
        return (com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.chinasofti.ark.bdadp.component.rpc.RpcProto.RpcReply.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:rpc.RpcService)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_RpcRequest_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_RpcRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_RpcReply_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_RpcReply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\trpc.proto\022\003rpc\"\032\n\nRpcRequest\022\014\n\004name\030\001" +
      " \001(\t\"]\n\010RpcReply\022\n\n\002no\030\001 \001(\005\022\014\n\004time\030\002 \001" +
      "(\005\022\013\n\003cpu\030\003 \001(\001\022\013\n\003mem\030\004 \001(\001\022\014\n\004disk\030\005 \001" +
      "(\001\022\017\n\007network\030\006 \001(\00127\n\nRpcService\022)\n\003rpc" +
      "\022\017.rpc.RpcRequest\032\r.rpc.RpcReply\"\0000\001B7\n&" +
      "com.chinasofti.ark.bdadp.component.rpcB\010" +
      "RpcProtoP\000\210\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_rpc_RpcRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rpc_RpcRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_RpcRequest_descriptor,
        new String[] { "Name", });
    internal_static_rpc_RpcReply_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_rpc_RpcReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_RpcReply_descriptor,
        new String[] { "No", "Time", "Cpu", "Mem", "Disk", "Network", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
